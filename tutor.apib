FORMAT: 1A
HOST: https://tutor-dev.openstax.org/api/

# tutor

_TODO:_
- Use `title` or `name` more consistently

# Data Structures

## Date (string)
An ISO date (no time or timezone information)

## Timestamp (Date)
An ISO date with time and timezone information

## Href (string)
Marker for a partial URL

## Chapter Section (array[number, number])
Array of `[chapter, section]`

## Teacher Plan Page Stats (object)
+ id: `314` (string, required)
+ title: `Themes and Concepts of Biology` (string, required)
+ is_trouble: `false` (boolean, required)
+ correct_count: `2` (number, required)
+ incorrect_count: `2` (number, required)
+ student_count: `1` (number, required)
+ chapter_section (Chapter Section, required)

## Teacher Plan Period Stats (object)
+ name: `2nd Period` (string, required)
+ period_id: `2` (string, required)
+ is_trouble: `false` (boolean, required)
+ mean_grade_percent: `50` (number, required)
+ current_pages (array[Teacher Plan Page Stats], required)
+ spaced_pages (array[Teacher Plan Page Stats], required)
+ complete_count: `1` (number, required)
+ partially_complete_count: `1` (number, required)
+ total_count: `10` (number, required)

## Teacher Plan Stats (object)
+ id: `69` (string, required)
+ type: homework, reading, event (enum, required)
+ title: `3 part MPQ` (string, required)
+ stats (array[Teacher Plan Period Stats], required)
+ shareable_url: `/@/kEyX0d/3-part-mpq` (Href, required)

## Teacher Plan Homework Settings (object)
+ page_ids: `314` (array[string], required)
+ exercise_ids: `2994` (array[string], required)
+ exercises_count_dynamic: `3` (number, required)

## Tasking Plan (object)
- target_id: `1` (string, required)
- target_type: period (enum, required)
- opens_at: `2016-07-06T05:01:00.000Z` (Timestamp, required)
- due_at: `2016-07-15T12:00:00.000Z` (Timestamp, required)


## Teacher Plan (object)
+ id: `69` (string, required)
+ title: `3 part MPQ` (string, required)
+ type: homework, reading, event (enum, required)
+ ecosystem_id: `4` (string, required)
+ is_feedback_immediate: `false` (boolean, required)
+ is_draft: `false` (boolean, required)
+ is_publishing: `false` (boolean, required)
+ is_published: `true` (boolean, required)
+ is_trouble: `false` (boolean, required)
+ first_published_at: `2016-07-06T19:30:59.515Z` (Timestamp, required)
+ last_published_at: `2016-07-06T19:30:59.515Z` (Timestamp, required)
+ publish_last_requested_at: `2016-07-06T19:30:58.399Z` (Timestamp, required)
+ publish_job_url: `/api/jobs/af8f9add-cb30-4973-be4c-42295287bd60` (Href, required)
+ settings (Teacher Plan Homework Settings, required)
+ tasking_plans' (array[Tasking Plan], required)


## Tutor User (object)
+ id: `1` (string, required)
+ role_id: `1` (string, required)
+ first_name: `Charles` (string, required)
+ last_name: `Morris` (string, required)

## User Role (object)
+ id: `1` (string, required)
+ type: student, teacher (enum, required)

## Course Blurb (object)
+ name: `Biology I` (string, required)
+ teachers (array[Tutor User], required)

## Teacher Dashboard (object)
+ plans (array[Teacher Plan], required)
+ tasks (array, required)
+ role (User Role, required)
+ course (Course Blurb, required)

## Teacher Student Scores Period Data Heading (object)
+ title: `3 part MPQ` (string, required)
+ plan_id: `69` (number, required)
+ type: homework, reading (enum, required)
+ due_at: `2016-07-15T12:00:00.000Z` (Timestamp, required)
+ average_score': `0.0277777777777778` (number, required)

## Teacher Student Scores User Data (object)
+ type: `homework` (string, required)
+ id: `1362` (number, required)
+ status: `not_started` (string, required)
+ step_count: `4` (number, required)
+ completed_step_count: `0` (number, required)
+ completed_on_time_step_count: `0` (number, required)
+ completed_accepted_late_step_count: `0` (number, required)
+ exercise_count: `4` (number, required)
+ completed_exercise_count: `0` (number, required)
+ completed_on_time_exercise_count: `0` (number, required)
+ completed_accepted_late_exercise_count: `0` (number, required)
+ correct_exercise_count: `0` (number, required)
+ correct_on_time_exercise_count: `0` (number, required)
+ correct_accepted_late_exercise_count: `0` (number, required)
+ score: `0.9` (number, required)
+ recovered_exercise_count: `0` (number, required)
+ due_at: `2016-07-15T12:00:00.000Z` (Timestamp, required)
+ is_late_work_accepted: `false` (boolean, required)
+ is_included_in_averages: `true` (boolean, required)


## Teacher Student Scores User (object)
+ name: `Rabbit Angstrom` (string, required)
+ first_name: `Rabbit` (string, required)
+ last_name: `Angstrom` (string, required)
+ role: 9 (number, required) - _TODO:_ Use `role_id` and make it a string
+ student_identifier: `JQMVOWU2PA` (string, required)
+ average_score: `0.9` (number, required)
+ data (array[Teacher Student Scores User Data], required) - This has to match the length of the Data Headings


## Teacher Student Scores Period (object)
+ period_id: `1` (string, required)
+ overall_average_score: `0.0222` (number, required)
+ data_headings (array[Teacher Student Scores Period Data Heading], required)
+ students (array[Teacher Student Scores User], required)


# Teacher Assignments [/plans/{planId}]

## Statistics [GET /plans/{planId}/stats]

+ Parameters
    + planId: `69` (number, required)

+ Response 200 (application/json)
    + Attributes (Teacher Plan Stats)


# Teacher Course Dashboard [/courses/{courseId}/dashboard{?start_at,end_at}]

## Get Events for a date range [GET /courses/{courseId}/dashboard{?start_at,end_at}]

+ Parameters
    + courseId: `1` (number, required)
    + start_at: `2016-06-30` (Date, required)
    + end_at: `2016-08-01` (Date, required)

+ Response 200 (application/json)
  + Attributes (Teacher Dashboard)


# Student Scores [/courses/{courseId}/performance]

## Get Matrix of Student Scores [GET /courses/{courseId}/performance]

+ Parameters
    + courseId: `1` (number, required)

+ Response 200 (application/json)
  + Attributes (array[Teacher Student Scores Period])
